[{"C:\\Users\\kigog\\Desktop\\WDOctober2020\\Projects\\redBadgeThePowerBoard\\power-board-client\\src\\index.tsx":"1","C:\\Users\\kigog\\Desktop\\WDOctober2020\\Projects\\redBadgeThePowerBoard\\power-board-client\\src\\reportWebVitals.ts":"2","C:\\Users\\kigog\\Desktop\\WDOctober2020\\Projects\\redBadgeThePowerBoard\\power-board-client\\src\\App.tsx":"3","C:\\Users\\kigog\\Desktop\\WDOctober2020\\Projects\\redBadgeThePowerBoard\\power-board-client\\src\\components\\Navbar\\Navbar.tsx":"4","C:\\Users\\kigog\\Desktop\\WDOctober2020\\Projects\\redBadgeThePowerBoard\\power-board-client\\src\\components\\Auth\\Auth.tsx":"5","C:\\Users\\kigog\\Desktop\\WDOctober2020\\Projects\\redBadgeThePowerBoard\\power-board-client\\src\\components\\Powers\\Powers.tsx":"6","C:\\Users\\kigog\\Desktop\\WDOctober2020\\Projects\\redBadgeThePowerBoard\\power-board-client\\src\\components\\Powers\\DisplayPower\\DisplayPower.tsx":"7","C:\\Users\\kigog\\Desktop\\WDOctober2020\\Projects\\redBadgeThePowerBoard\\power-board-client\\src\\components\\Characters\\Characters.tsx":"8","C:\\Users\\kigog\\Desktop\\WDOctober2020\\Projects\\redBadgeThePowerBoard\\power-board-client\\src\\components\\Characters\\DisplayCharacter\\DisplayCharacter.tsx":"9","C:\\Users\\kigog\\Desktop\\WDOctober2020\\Projects\\redBadgeThePowerBoard\\power-board-client\\src\\components\\Profile\\Profile.tsx":"10","C:\\Users\\kigog\\Desktop\\WDOctober2020\\Projects\\redBadgeThePowerBoard\\power-board-client\\src\\components\\Profile\\ProfileDisplay\\ProfileDisplay.tsx":"11","C:\\Users\\kigog\\Desktop\\WDOctober2020\\Projects\\redBadgeThePowerBoard\\power-board-client\\src\\components\\Profile\\CreateUpdateDelete\\CreatePower.tsx":"12","C:\\Users\\kigog\\Desktop\\WDOctober2020\\Projects\\redBadgeThePowerBoard\\power-board-client\\src\\components\\Profile\\CreateUpdateDelete\\UpdatePower.tsx":"13","C:\\Users\\kigog\\Desktop\\WDOctober2020\\Projects\\redBadgeThePowerBoard\\power-board-client\\src\\components\\Profile\\CreateUpdateDelete\\CreateCharacter.tsx":"14","C:\\Users\\kigog\\Desktop\\WDOctober2020\\Projects\\redBadgeThePowerBoard\\power-board-client\\src\\components\\Profile\\CreateUpdateDelete\\UpdateCharacter.tsx":"15","C:\\Users\\kigog\\Desktop\\WDOctober2020\\Projects\\redBadgeThePowerBoard\\power-board-client\\src\\helpers\\enviorment.tsx":"16"},{"size":500,"mtime":499162500000,"results":"17","hashOfConfig":"18"},{"size":425,"mtime":499162500000,"results":"19","hashOfConfig":"18"},{"size":1233,"mtime":1610563537054,"results":"20","hashOfConfig":"18"},{"size":2698,"mtime":1610648799870,"results":"21","hashOfConfig":"18"},{"size":6079,"mtime":1610652846543,"results":"22","hashOfConfig":"18"},{"size":1861,"mtime":1610654474581,"results":"23","hashOfConfig":"18"},{"size":4701,"mtime":1610648799871,"results":"24","hashOfConfig":"18"},{"size":2031,"mtime":1610654131057,"results":"25","hashOfConfig":"18"},{"size":4972,"mtime":1610648799869,"results":"26","hashOfConfig":"18"},{"size":3664,"mtime":1610648799876,"results":"27","hashOfConfig":"18"},{"size":5565,"mtime":1610655049109,"results":"28","hashOfConfig":"18"},{"size":3294,"mtime":1610651035346,"results":"29","hashOfConfig":"18"},{"size":3055,"mtime":1610648799875,"results":"30","hashOfConfig":"18"},{"size":3307,"mtime":1610648799873,"results":"31","hashOfConfig":"18"},{"size":3477,"mtime":1610648799875,"results":"32","hashOfConfig":"18"},{"size":396,"mtime":1610655063485,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"abbh69",{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"36"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"36"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\kigog\\Desktop\\WDOctober2020\\Projects\\redBadgeThePowerBoard\\power-board-client\\src\\index.tsx",[],["70","71"],"C:\\Users\\kigog\\Desktop\\WDOctober2020\\Projects\\redBadgeThePowerBoard\\power-board-client\\src\\reportWebVitals.ts",[],"C:\\Users\\kigog\\Desktop\\WDOctober2020\\Projects\\redBadgeThePowerBoard\\power-board-client\\src\\App.tsx",[],"C:\\Users\\kigog\\Desktop\\WDOctober2020\\Projects\\redBadgeThePowerBoard\\power-board-client\\src\\components\\Navbar\\Navbar.tsx",[],"C:\\Users\\kigog\\Desktop\\WDOctober2020\\Projects\\redBadgeThePowerBoard\\power-board-client\\src\\components\\Auth\\Auth.tsx",["72"],"import React from 'react'\r\nimport { Button } from '@material-ui/core'\r\nimport APIURL from '../../helpers/enviorment'\r\nimport './Auth.css'\r\nimport { Alert } from '@material-ui/lab';\r\n\r\ntype UserTypes = {\r\n    user: {},\r\n    email: string,\r\n    userNameSignup: string,\r\n    userNameLogin: string,\r\n    passwordSignup: string,\r\n    passwordLogin: string\r\n}\r\n\r\ntype propTypes = {\r\n    updateToken(newToken: String): void,\r\n    setUser(user: String): void\r\n}\r\n\r\nclass Auth extends React.Component<propTypes, UserTypes>{\r\n    constructor(props: propTypes) {\r\n        super(props)\r\n        this.state = {\r\n            user: {},\r\n            email: '',\r\n            userNameSignup: '',\r\n            userNameLogin: '',\r\n            passwordSignup: '',\r\n            passwordLogin: ''\r\n        }\r\n\r\n    }\r\n\r\n    fetchSignUp() {\r\n        fetch(`${APIURL}/user/register`, {\r\n            method: 'POST',\r\n            body: JSON.stringify({ email: this.state.email, userName: this.state.userNameSignup, password: this.state.passwordSignup }),\r\n            headers: new Headers({\r\n                'Content-Type': 'application/json'\r\n            })\r\n        })\r\n            .then(res => res.json())\r\n            .then(data => {\r\n                console.log('fetchSuccess');\r\n                this.setState({\r\n                    user: data\r\n                });\r\n                this.props.updateToken(data.sessionToken);\r\n                // console.log(this.state.user);\r\n            })\r\n            .catch(err => console.log(err))\r\n    }\r\n\r\n    fetchLogin = () => {\r\n        fetch(`${APIURL}/user/login`, {\r\n            method: 'POST',\r\n            body: JSON.stringify({ userName: this.state.userNameLogin, password: this.state.passwordLogin }),\r\n            headers: new Headers({\r\n                'Content-Type': 'application/json'\r\n            })\r\n        })\r\n            .then(res => res.json())\r\n            .then(data => {\r\n                // console.log(data.user);\r\n                console.log('successful fetch');\r\n                this.setState({\r\n                    user: data\r\n                });\r\n                this.props.updateToken(data.sessionToken);\r\n                this.props.setUser(data.user.role);\r\n                \r\n            })\r\n            .catch(err => {\r\n                console.log('error:', err);\r\n                //make a state change for local storage for login success and failure?\r\n            })\r\n    }\r\n\r\n    handleSubmitRegister = (event: React.MouseEvent<HTMLElement>) => {\r\n        event.preventDefault()\r\n        console.log('helloWorld!')\r\n        this.fetchSignUp();\r\n    }\r\n\r\n    handleSubmitLogin = (event: React.MouseEvent<HTMLElement>) => {\r\n        event.preventDefault()\r\n        console.log('sumbitLogin Success')\r\n        this.fetchLogin()\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"introSpeech\">\r\n                    <h3>\r\n                        Hello and Welcome.\r\n                        <br />\r\n                        This is a site for those who are looking for ideas for\r\n                        <br></br>\r\n                        creative characters and super powers for stories or table top rpgs.\r\n                        <br />\r\n                        Please feel free to look at the powers and characters without signing up\r\n                        <br />\r\n                        but if you want to create one you will need to sign up or log in.\r\n                        <br />\r\n                        <br />\r\n                        Thank you for checking this place out!\r\n                    </h3>\r\n                </div>\r\n                <div className=\"authContainer\">\r\n                    <form className=\"signUp\" >\r\n                        <div>\r\n                            <h2>Sign Up</h2>\r\n                            <label >Email:</label>\r\n                            <br />\r\n                            <input onChange={(e) => this.setState({ email: e.target.value })} name=\"email\" value={this.state.email}></input>\r\n                            <br />\r\n                        </div>\r\n                        <div>\r\n                            <label>Username:</label>\r\n                            <br />\r\n                            <input type=\"text\" onChange={(e) => this.setState({ userNameSignup: e.target.value })} value={this.state.userNameSignup}></input>\r\n                            <br />\r\n                        </div>\r\n                        <div>\r\n                            <label>Password:</label>\r\n                            <br />\r\n                            <input type=\"password\" onChange={(e) => this.setState({ passwordSignup: e.target.value })} value={this.state.passwordSignup}></input>\r\n                            <br />\r\n                        </div>\r\n                        <br />\r\n                        <Button style={{ backgroundColor: 'lightGray' }} onClick={(e) => this.handleSubmitRegister(e)}>Submit</Button>\r\n                    </form>\r\n\r\n\r\n\r\n                    <form className=\"logIn\">\r\n                        <div>\r\n                            <h2>Login</h2>\r\n                            <label>Username:</label>\r\n                            <br />\r\n                            <input onChange={(e) => this.setState({ userNameLogin: e.target.value })} value={this.state.userNameLogin} />\r\n                            <br />\r\n                        </div>\r\n                        <div>\r\n                            <label>Password:</label>\r\n                            <br />\r\n                            <input type=\"password\" onChange={(e) => this.setState({ passwordLogin: e.target.value })} value={this.state.passwordLogin} />\r\n                            <br />\r\n                        </div>\r\n                        <br />\r\n                        <Button style={{ backgroundColor: 'lightGray' }} onClick={(e) => { return this.handleSubmitLogin(e) }}>Submit</Button>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Auth","C:\\Users\\kigog\\Desktop\\WDOctober2020\\Projects\\redBadgeThePowerBoard\\power-board-client\\src\\components\\Powers\\Powers.tsx",[],"C:\\Users\\kigog\\Desktop\\WDOctober2020\\Projects\\redBadgeThePowerBoard\\power-board-client\\src\\components\\Powers\\DisplayPower\\DisplayPower.tsx",[],"C:\\Users\\kigog\\Desktop\\WDOctober2020\\Projects\\redBadgeThePowerBoard\\power-board-client\\src\\components\\Characters\\Characters.tsx",[],"C:\\Users\\kigog\\Desktop\\WDOctober2020\\Projects\\redBadgeThePowerBoard\\power-board-client\\src\\components\\Characters\\DisplayCharacter\\DisplayCharacter.tsx",["73","74"],"import React from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { Button, Dialog } from '@material-ui/core/';\r\nimport UpdateCharacter from '../../Profile/CreateUpdateDelete/UpdateCharacter'\r\nimport UpdatePower from '../../Profile/CreateUpdateDelete/UpdatePower';\r\n\r\n//STYLES\r\nconst useStyles = makeStyles({\r\n    divContain: {\r\n        display: 'flex',\r\n        justifyContent: 'center'\r\n    },\r\n    root: {\r\n        minWidth: 475,\r\n        maxWidth: 476,\r\n        border: '2px solid black',\r\n        marginTop: '10px',\r\n        marginBottom: '20px'\r\n    },\r\n    title: {\r\n        fontSize: 14,\r\n    },\r\n    pos: {\r\n        marginBottom: 12,\r\n    }\r\n});\r\n\r\n//PROPS AND TYPEALIAS\r\ntype characterInterface = {\r\n    characterName: string,\r\n    tags: Array<string>,\r\n    description: string,\r\n    user: { userName: string, role: string },\r\n    id: number\r\n    updatedAt: Date\r\n}\r\n\r\ntype characterProps = {\r\n    characterResults: Array<characterInterface>,\r\n    deleteCharacter(id: number): void,\r\n    userRole: string | null,\r\n    token: string | null\r\n}\r\n\r\ntype modalType = {\r\n    modalOpen: boolean\r\n}\r\n\r\ntype modalProps = {\r\n    id: number,\r\n    deleteCharacter(id: number): void\r\n}\r\n\r\nclass Modal extends React.Component<modalProps, modalType> {\r\n    constructor(props: modalProps) {\r\n        super(props)\r\n        this.state = {\r\n            modalOpen: false\r\n        }\r\n    }\r\n\r\n    handleOpen() {\r\n        this.setState({ modalOpen: true })\r\n    }\r\n\r\n    handleClose() {\r\n        this.setState({ modalOpen: false })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Button style={{border: '1px solid black'}} onClick={() => this.handleOpen()} >Delete Character</Button>\r\n                <Dialog\r\n                    open={this.state.modalOpen}\r\n                    onClose={() => this.handleClose()}\r\n                >\r\n                    <div style={{ padding: '10px' }}>\r\n                        <h2>Are You Sure?</h2>\r\n                        <br />\r\n                        <Button style={{border: '1px solid black'}} onClick={() => this.props.deleteCharacter(this.props.id)}>Delete</Button>\r\n                    </div>\r\n                </Dialog>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst DisplayCharacter = (props: characterProps) => {\r\n    const classes = useStyles()\r\n\r\n    let sortedCharacters = props.characterResults.sort((n1,n2) => {\r\n        if(n1.updatedAt < n2.updatedAt) {\r\n            return 1;\r\n        }\r\n\r\n        if(n1.updatedAt > n2.updatedAt) {\r\n            return -1;\r\n        }\r\n\r\n        return 0;\r\n    })\r\n\r\n    return (\r\n        <>\r\n            <div>\r\n                {props.characterResults.map((character: characterInterface, index: number) => {\r\n\r\n                    let isHidden\r\n\r\n                    if (props.userRole !== 'admin') {\r\n                        isHidden = true\r\n                    }\r\n\r\n\r\n                    return (\r\n                        <div className={classes.divContain} key={index}>\r\n                            <Card className={classes.root}>\r\n                                <CardContent>\r\n                                    <Typography className={classes.title} color=\"textPrimary\" gutterBottom>\r\n                                        Character:\r\n                                </Typography>\r\n                                    <Typography variant=\"h5\" component=\"h2\">\r\n                                        {character.characterName}\r\n                                    </Typography>\r\n                                    <Typography className={classes.pos} color=\"textSecondary\">\r\n                                        {character.description}\r\n                                    </Typography>\r\n                                    <Typography variant=\"body2\" component=\"p\">\r\n                                        {character.user.userName}\r\n                                    </Typography>\r\n                                    <div className=\"modalDiv\" hidden={isHidden}>\r\n                                        <UpdateCharacter\r\n                                            token={props.token}\r\n                                            id={character.id}\r\n                                        />\r\n                                        <Modal\r\n                                            id={character.id}\r\n                                            deleteCharacter={props.deleteCharacter}\r\n\r\n                                        >\r\n                                        </Modal>\r\n                                    </div>\r\n                                </CardContent>\r\n                            </Card>\r\n                        </div>\r\n                    )\r\n                })}\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default DisplayCharacter","C:\\Users\\kigog\\Desktop\\WDOctober2020\\Projects\\redBadgeThePowerBoard\\power-board-client\\src\\components\\Profile\\Profile.tsx",[],"C:\\Users\\kigog\\Desktop\\WDOctober2020\\Projects\\redBadgeThePowerBoard\\power-board-client\\src\\components\\Profile\\ProfileDisplay\\ProfileDisplay.tsx",["75","76","77"],"C:\\Users\\kigog\\Desktop\\WDOctober2020\\Projects\\redBadgeThePowerBoard\\power-board-client\\src\\components\\Profile\\CreateUpdateDelete\\CreatePower.tsx",[],"C:\\Users\\kigog\\Desktop\\WDOctober2020\\Projects\\redBadgeThePowerBoard\\power-board-client\\src\\components\\Profile\\CreateUpdateDelete\\UpdatePower.tsx",[],["78","79"],"C:\\Users\\kigog\\Desktop\\WDOctober2020\\Projects\\redBadgeThePowerBoard\\power-board-client\\src\\components\\Profile\\CreateUpdateDelete\\CreateCharacter.tsx",[],"C:\\Users\\kigog\\Desktop\\WDOctober2020\\Projects\\redBadgeThePowerBoard\\power-board-client\\src\\components\\Profile\\CreateUpdateDelete\\UpdateCharacter.tsx",[],"C:\\Users\\kigog\\Desktop\\WDOctober2020\\Projects\\redBadgeThePowerBoard\\power-board-client\\src\\helpers\\enviorment.tsx",[],{"ruleId":"80","replacedBy":"81"},{"ruleId":"82","replacedBy":"83"},{"ruleId":"84","severity":1,"message":"85","line":5,"column":10,"nodeType":"86","messageId":"87","endLine":5,"endColumn":15},{"ruleId":"84","severity":1,"message":"88","line":8,"column":8,"nodeType":"86","messageId":"87","endLine":8,"endColumn":19},{"ruleId":"84","severity":1,"message":"89","line":95,"column":9,"nodeType":"86","messageId":"87","endLine":95,"endColumn":25},{"ruleId":"84","severity":1,"message":"90","line":5,"column":8,"nodeType":"86","messageId":"87","endLine":5,"endColumn":19},{"ruleId":"91","severity":1,"message":"92","line":91,"column":101,"nodeType":"93","messageId":"94","endLine":91,"endColumn":103},{"ruleId":"91","severity":1,"message":"92","line":118,"column":117,"nodeType":"93","messageId":"94","endLine":118,"endColumn":119},{"ruleId":"80","replacedBy":"95"},{"ruleId":"82","replacedBy":"96"},"no-native-reassign",["97"],"no-negated-in-lhs",["98"],"@typescript-eslint/no-unused-vars","'Alert' is defined but never used.","Identifier","unusedVar","'UpdatePower' is defined but never used.","'sortedCharacters' is assigned a value but never used.","'CardActions' is defined but never used.","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd",["97"],["98"],"no-global-assign","no-unsafe-negation"]